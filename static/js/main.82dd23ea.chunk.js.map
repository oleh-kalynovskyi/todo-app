{"version":3,"sources":["Component.js","App.js","index.js"],"names":["TodoForm","addTodo","React","useState","value","setValue","className","onSubmit","e","preventDefault","required","type","onChange","target","title","Todo","todo","index","completeTodo","removeTodo","text","style","textDecoration","isCompleted","color","onClick","Component","newTodos","todos","splice","setTodos","length","map","border","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAGA,SAASA,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAAU,EACCC,IAAMC,SAAS,IADhB,mBAClBC,EADkB,KACXC,EADW,KAUzB,OACI,uBAAMC,UAAU,OAAOC,SARN,SAAAC,GACjBA,EAAEC,iBAEFR,EAAQG,GACRC,EAAS,KAIT,UACI,uBACIK,UAAQ,EACRC,KAAK,OACLP,MAAOA,EACPQ,SAAU,SAAAJ,GAAC,OAAIH,EAASG,EAAEK,OAAOT,UAGrC,wBAAQU,MAAM,WAAd,kBAKZ,SAASC,EAAT,GAAgE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KACnD,OACI,mCACA,sBAAKd,UAAU,gBAAf,UAII,uBAAOK,KAAK,WAAWC,SAAU,kBAAMM,EAAaD,MAEpD,qBAAKX,UAAU,OACXe,MAAO,CACPC,eAAgBN,EAAKO,YAAc,eAAiB,OACpDC,MAAOR,EAAKO,YAAc,QAAU,IAHxC,SAMKP,EAAKI,OAIV,wBAAQK,QAAS,kBAAMN,EAAWF,EAAOG,IAAON,MAAM,wBAAtD,oBA2EGY,MAnEf,WACI,IAAMP,EAAa,SAAAF,GACf,IAAMU,EAAQ,YAAOC,GACrBD,EAASE,OAAOZ,EAAO,GACvBa,EAASH,IAGPT,EAAe,SAAAD,GACjB,IAAMU,EAAQ,YAAOC,GACrBD,EAASV,GAAOM,aAAeI,EAASV,GAAOM,YAC/CO,EAASH,IAVI,EAoBSzB,IAAMC,SAAS,CACrC,CACAiB,KAAM,WACNG,aAAa,GAEb,CACAH,KAAM,cACNG,aAAa,GAEb,CACAH,KAAM,cACNG,aAAa,KA/BA,mBAoBVK,EApBU,KAoBHE,EApBG,KAqCjB,OACI,sBAAKxB,UAAU,MAAf,UAEI,2CAAesB,EAAMG,OAArB,WAEA,sBAAKzB,UAAU,YAAf,UAEI,cAACN,EAAD,CAAUC,QA/BN,SAAAmB,GACZ,IAAMO,EAAQ,sBAAQC,GAAR,CAAe,CAAER,UAC/BU,EAASH,MA+BD,6BACKC,EAAMI,KAAI,SAAChB,EAAMC,GAAP,OAEP,oBAAgBX,UAAU,YAAYe,MAAO,CACzCY,OAAQjB,EAAKO,YAAc,kBAAoB,IADnD,SAEI,cAACR,EAAD,CACIE,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,KANXF,eC3FlBiB,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82dd23ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction TodoForm({addTodo}) {\r\n    const [value, setValue] = React.useState('');\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        // if (!value) return;\r\n        addTodo(value);\r\n        setValue(\"\");\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n            <input \r\n                required\r\n                type=\"text\"\r\n                value={value}    \r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n            \r\n            <button title=\"Add task\">+</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction Todo({ todo, index, completeTodo, removeTodo, text }) {\r\n    return (\r\n        <>\r\n        <div className=\"todo-item-box\">\r\n            {/* <button onClick={() => {completeTodo(index); addToStor(index)}} title=\"add task to list\">\r\n                Compleat\r\n            </button>  */}\r\n            <input type=\"checkbox\" onChange={() => completeTodo(index)}/>\r\n\r\n            <div className=\"todo\" \r\n                style={{ \r\n                textDecoration: todo.isCompleted ? \"line-through\" : \"none\",\r\n                color: todo.isCompleted ? \"green\" : \"\"\r\n                }}>\r\n\r\n                {todo.text}\r\n\r\n            </div>\r\n\r\n            <button onClick={() => removeTodo(index, text)} title=\"Remove task from list\">\r\n                X\r\n            </button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Component() {    \r\n    const removeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos.splice(index, 1);\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const completeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos[index].isCompleted = !newTodos[index].isCompleted;\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const addTodo = text => {\r\n        const newTodos = [ ...todos, { text }];\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    \r\n\r\n    const [todos, setTodos] = React.useState([\r\n        { \r\n        text: 'learn JS',\r\n        isCompleted: false\r\n        },\r\n        {\r\n        text: 'learn React',\r\n        isCompleted: false\r\n        },\r\n        {\r\n        text: 'learn Redux',\r\n        isCompleted: false\r\n        }\r\n    ]);\r\n\r\n    // localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n\r\n    return(\r\n        <div className=\"app\">\r\n\r\n            <h1>You have { todos.length } Task</h1>\r\n\r\n            <div className=\"todo-list\">\r\n\r\n                <TodoForm addTodo={addTodo} />\r\n\r\n                <ul>\r\n                    {todos.map((todo, index) => (\r\n\r\n                        <li key={index} className=\"todo-item\" style={{ \r\n                            border: todo.isCompleted ? \"1px solid green\" : \"\"}} > \r\n                            <Todo\r\n                                index={index}\r\n                                todo={todo}\r\n                                completeTodo={completeTodo}\r\n                                removeTodo={removeTodo}\r\n                            />\r\n                        </li>\r\n\r\n                    ))}\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Component;","import '../src/App.css';\r\nimport React from 'react'\r\nimport Component from '../src/Component';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Component />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../src/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}