{"version":3,"sources":["Component.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","value","setValue","className","onSubmit","e","preventDefault","required","type","onChange","target","title","Todo","todo","completeTodo","removeTodo","id","checked","isCompleted","style","textDecoration","color","text","onClick","Component","useEffect","todos","localStorage","getItem","setTodos","JSON","parse","newTodos","filter","el","setItem","stringify","map","length","Math","floor","random","index","border","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAGA,SAASA,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAAU,EAECC,mBAAS,IAFV,mBAElBC,EAFkB,KAEXC,EAFW,KAWzB,OACI,uBAAMC,UAAU,OAAOC,SARN,SAAAC,GACjBA,EAAEC,iBACFP,EAAQE,GACRC,EAAS,KAKT,UAEI,uBACIK,UAAQ,EACRC,KAAK,OACLP,MAAOA,EACPQ,SAAU,SAAAJ,GAAC,OAAIH,EAASG,EAAEK,OAAOT,UAGrC,wBAAQU,MAAM,WAAd,kBAKZ,SAASC,EAAT,GAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAAiB,EAALC,GAC5C,OACI,mCACA,sBAAKb,UAAU,gBAAf,UACI,uBAAOK,KAAK,WAAWC,SAAU,kBAAMK,EAAaD,EAAKG,KAAKC,QAASJ,EAAKK,cAE5E,qBAAKf,UAAU,OACXgB,MAAO,CACPC,eAAgBP,EAAKK,YAAc,eAAiB,OACpDG,MAAOR,EAAKK,YAAc,QAAU,IAHxC,SAMKL,EAAKS,OAIV,wBAAQC,QAAS,kBAAMR,EAAWF,EAAKG,KAAKL,MAAM,wBAAlD,oBAyEGa,MAjEf,WAEIC,qBAAW,WACP,IAAMC,EAAQC,aAAaC,QAAQ,SACnCC,EAASH,EAAQI,KAAKC,MAAML,GAAS,MACtC,IAEH,IAAMX,EAAa,SAAAC,GACf,IAAMgB,EAAWN,EAAMO,QAAO,SAAAC,GAAE,OAAIA,EAAGlB,KAAOA,KAC9Ca,EAASG,GAETL,aAAaQ,QAAQ,QAASL,KAAKM,UAAUJ,KAG3ClB,EAAe,SAAAE,GACjB,IAAMgB,EAAWN,EAAMW,KAAI,SAAAH,GAIvB,OAHGA,EAAGlB,KAAOA,IACTkB,EAAGhB,aAAegB,EAAGhB,aAElBgB,KAEXL,EAASG,GAETL,aAAaQ,QAAQ,QAASL,KAAKM,UAAUJ,KAvBhC,EAiCShC,mBAAU,IAjCnB,mBAiCV0B,EAjCU,KAiCHG,EAjCG,KAmCjB,OACI,sBAAK1B,UAAU,MAAf,UAEI,2CAAeuB,EAAMY,OAAS,EAAIZ,EAAMY,OAAS,KAAjD,WAEA,sBAAKnC,UAAU,YAAf,UAEI,cAACL,EAAD,CAAUC,QAhBN,SAAAuB,GACZ,IAAMU,EAAQ,sBAAQN,GAAR,CAAe,CAACV,GAAGuB,KAAKC,MAAsB,IAAhBD,KAAKE,UAAiBnB,OAAMJ,aAAa,KACrFW,EAASG,GAETL,aAAaQ,QAAQ,QAASL,KAAKM,UAAUJ,OAcrC,6BACKN,EAAMW,KAAI,SAACxB,EAAM6B,GAAP,OAEP,oBAAgBvC,UAAU,YAAYgB,MAAO,CACzCwB,OAAQ9B,EAAKK,YAAc,kBAAoB,IADnD,SAEI,cAACN,EAAD,CACI8B,MAAOA,EACP7B,KAAMA,EACNC,aAAcA,EACdC,WAAYA,KANX2B,eCxFlBE,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2bcbe4b0.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react';\r\n\r\n\r\nfunction TodoForm({addTodo}) {\r\n\r\n    const [value, setValue] = useState('');\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        addTodo(value);        \r\n        setValue(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n        \r\n            <input \r\n                required\r\n                type=\"text\"\r\n                value={value}    \r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n            \r\n            <button title=\"Add task\">+</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction Todo({ todo, completeTodo, removeTodo, id}) {\r\n    return (\r\n        <>\r\n        <div className=\"todo-item-box\">\r\n            <input type=\"checkbox\" onChange={() => completeTodo(todo.id)} checked={todo.isCompleted}/>\r\n\r\n            <div className=\"todo\" \r\n                style={{ \r\n                textDecoration: todo.isCompleted ? \"line-through\" : \"none\",\r\n                color: todo.isCompleted ? \"green\" : \"\"\r\n                }}>\r\n\r\n                {todo.text}\r\n\r\n            </div>\r\n\r\n            <button onClick={() => removeTodo(todo.id)} title=\"Remove task from list\">\r\n                X\r\n            </button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Component() {    \r\n\r\n    useEffect( () => {\r\n        const todos = localStorage.getItem(\"todos\") \r\n        setTodos(todos ? JSON.parse(todos) : []) \r\n    }, [])\r\n\r\n    const removeTodo = id => {\r\n        const newTodos = todos.filter(el => el.id !== id) ;\r\n        setTodos(newTodos);\r\n\r\n        localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        const newTodos = todos.map(el => {\r\n            if(el.id === id) {\r\n                el.isCompleted = !el.isCompleted\r\n            }\r\n            return el\r\n        })\r\n        setTodos(newTodos);\r\n\r\n        localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n    }\r\n\r\n    const addTodo = text => {\r\n        const newTodos = [ ...todos, {id:Math.floor(Math.random() * 100), text, isCompleted: false }];\r\n        setTodos(newTodos);\r\n\r\n        localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n    }\r\n\r\n    const [todos, setTodos] = useState( [] );\r\n\r\n    return(\r\n        <div className=\"app\">\r\n\r\n            <h1>You have { todos.length > 0 ? todos.length : \"no\" } Task</h1>\r\n\r\n            <div className=\"todo-list\">\r\n\r\n                <TodoForm addTodo={addTodo} />\r\n\r\n                <ul>\r\n                    {todos.map((todo, index) => (\r\n\r\n                        <li key={index} className=\"todo-item\" style={{ \r\n                            border: todo.isCompleted ? \"1px solid green\" : \"\"}} > \r\n                            <Todo\r\n                                index={index}\r\n                                todo={todo}\r\n                                completeTodo={completeTodo}\r\n                                removeTodo={removeTodo}\r\n                            />\r\n                        </li>\r\n\r\n                    ))}\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Component;","import '../src/App.css';\r\nimport React from 'react'\r\nimport Component from '../src/Component';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Component />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../src/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}